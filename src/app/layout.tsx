import type { Metadata } from "next";
import Image from "next/image";
import Link from "next/link";
import localFont from "next/font/local";
import { Inter } from "next/font/google";
import "./globals.css";
import { NAV_LINKS, CONNECT_LINKS, FAMILY_LINKS, CONTACT_LINKS } from "./LINKS";
import {
  IoChevronForward,
  IoPersonOutline,
  IoPeopleOutline,
} from "react-icons/io5";
import { FaRegMessage } from "react-icons/fa6";
import { FaHandHoldingHeart, FaWalking } from "react-icons/fa";
import { PiHandsPrayingFill } from "react-icons/pi";
import { SocialIcon } from "react-social-icons";
import "react-social-icons/facebook";
import "react-social-icons/email";
import { MdPhone } from "react-icons/md";

const inter = Inter({ subsets: ["latin"] });

const bobby = localFont({
  src: [{ path: "../../public/fonts/Bobby Jones Condensed.otf" }],
  variable: "--font-bobby",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const aboutSection = NAV_LINKS.find((link) => link.title === "About");

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" className={bobby.variable}>
      <body className={inter.className}>
        <div className="drawer">
          <input id="my-drawer-3" type="checkbox" className="drawer-toggle" />
          <div className="drawer-content flex flex-col">
            {/* Navbar */}
            <div className="md:border-b md:border-gray-300">
              <div className="navbar bg-white w-full m-auto px-4 relative site-container">
                <div className="flex-none md:hidden">
                  <label
                    htmlFor="my-drawer-3"
                    aria-label="open sidebar"
                    className="btn btn-square btn-ghost"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 24 24"
                      className="inline-block h-6 w-6 stroke-current"
                    >
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        strokeWidth="2"
                        d="M4 6h16M4 12h16M4 18h16"
                      ></path>
                    </svg>
                  </label>
                </div>
                <div className="mx-2 flex-1 px-2">
                  <Link href="/">
                    <Image
                      src="/brand/CBC-Circle-Logo.png"
                      alt="Cheyenne Berean Church Logo"
                      width={48}
                      height={48}
                      className="absolute md:relative m-auto md:m-0 inset-0"
                    />
                  </Link>
                </div>
                <div className="hidden flex-none md:block">
                  <ul className="menu menu-horizontal items-center gap-8">
                    {/* Navbar menu content here */}
                    {NAV_LINKS.map((link) =>
                      link.sub && link.sub.length > 0 ? (
                        <li key={link.title}>
                          <details>
                            <summary
                              className={`${
                                link.title === "Giving"
                                  ? `text-primary`
                                  : `text-accent`
                              } font-semibold hover:text-primary`}
                            >
                              {link.title}
                            </summary>
                            <ul className="z-50 rounded-t-none p-2 min-w-48">
                              {link.sub.map((subLink) => (
                                <li key={subLink.title}>
                                  <Link
                                    href={subLink.route}
                                    className={`${
                                      link.title === "Giving"
                                        ? `text-primary`
                                        : `text-accent`
                                    } font-semibold hover:text-primary`}
                                  >
                                    {subLink.title}
                                  </Link>
                                </li>
                              ))}
                            </ul>
                          </details>
                        </li>
                      ) : (
                        <li key={link.title}>
                          <Link
                            href={link.route}
                            className={`${
                              link.title === "Giving"
                                ? `text-primary`
                                : `text-accent`
                            } font-semibold hover:text-primary`}
                          >
                            {link.title}
                          </Link>
                        </li>
                      )
                    )}
                  </ul>
                </div>
              </div>
            </div>
            <div className="md:hidden border-b border-gray-300 overflow-x-auto">
              <div className="px-4 pt-4 pb-2 flex justify-between sm:justify-evenly">
                {CONNECT_LINKS.map((link) => (
                  <Link
                    key={link.route}
                    href={link.route}
                    className="flex flex-col justify-center items-center gap-1"
                  >
                    {link.icon === "person" ? (
                      <IoPersonOutline size={24} className="text-gray-800" />
                    ) : link.icon === "serve" ? (
                      <IoPeopleOutline size={24} className="text-gray-800" />
                    ) : link.icon === "walking" ? (
                      <FaWalking size={24} className="text-gray-800" />
                    ) : link.icon === "people" ? (
                      <FaRegMessage size={24} className="text-gray-800" />
                    ) : link.icon === "give" ? (
                      <FaHandHoldingHeart size={24} className="text-gray-800" />
                    ) : link.icon === "prayer" ? (
                      <PiHandsPrayingFill size={24} className="text-gray-800" />
                    ) : null}
                    <p className="font-semibold text-gray-600 text-xs">
                      {link.title === "Prayer Request" ? "Prayer" : link.title}
                    </p>
                  </Link>
                ))}
              </div>
            </div>
            <main className="flex min-h-screen flex-col items-center justify-between bg-gray-200 pb-8">
              <div className="site-container w-full px-4 py-8 mx-auto">
                {children}
              </div>
            </main>
          </div>
          <div className="drawer-side z-50">
            <label
              htmlFor="my-drawer-3"
              aria-label="close sidebar"
              className="drawer-overlay text-accent"
            ></label>
            <ul className="menu bg-white min-h-full w-80 p-0">
              {/* Sidebar content here */}
              <div className="flex flex-col border-gray-200">
                {NAV_LINKS.map((link) => (
                  <li
                    key={link.title}
                    className="border-b-2 border-gray-200 py-4"
                  >
                    <Link
                      href={link.route}
                      className="text-accent font-semibold uppercase text-xl hover:text-primary flex items-center justify-between"
                    >
                      <span>{link.title}</span>
                      <IoChevronForward size={24} className="text-accent" />
                    </Link>
                  </li>
                ))}
              </div>
            </ul>
          </div>
        </div>
        <div className="relative border-t border-gray-300 overflow-hidden bg-white">
          {/* <Image
            src="/light-mountains.png"
            alt="light mountain logo"
            className="hidden md:block md:top-[-128px]"
            layout="fill"
            objectFit="cover"
          /> */}
          <footer className="px-4 py-8 md:px-8 site-container m-auto flex flex-col gap-16">
            <div className="grid w-full grid-cols-12 gap-y-8 gap-x-4 z-10">
              <nav className="flex flex-col gap-2 col-span-6 md:col-span-3">
                <h6 className="font-bold text-accent uppercase mb-2">About</h6>
                {aboutSection?.sub.map((link) => (
                  <Link
                    href={link.route}
                    className="text-gray-800 hover:underline"
                    key={link.title}
                  >
                    {link.title}
                  </Link>
                ))}
              </nav>
              <nav className="flex flex-col gap-2 col-span-6 md:col-span-3">
                <h6 className="font-bold text-accent uppercase mb-2">
                  Get Involved
                </h6>
                {CONNECT_LINKS.map((link) => (
                  <Link
                    href={link.route}
                    className="text-gray-800 hover:underline"
                    key={link.title}
                  >
                    {link.title}
                  </Link>
                ))}
              </nav>
              <nav className="flex flex-col gap-2 col-span-6 md:col-span-3">
                <h6 className="font-bold text-accent uppercase mb-2">
                  For Your Family
                </h6>
                {FAMILY_LINKS.map((link) => (
                  <Link
                    href={link.route}
                    className="text-gray-800 hover:underline"
                    key={link.title}
                  >
                    {link.title}
                  </Link>
                ))}
              </nav>
              <nav className="flex flex-col gap-2 col-span-6 md:col-span-3">
                <h6 className="font-bold text-accent uppercase mb-2">
                  Connect With Us
                </h6>
                {CONTACT_LINKS.map((link) => (
                  <Link
                    href={link.route}
                    className="text-gray-800 hover:underline"
                    key={link.title}
                  >
                    {link.title}
                  </Link>
                ))}
              </nav>
            </div>
            <div className="flex flex-col md:flex-row md:flex-row-reverse gap-8 items-center justify-center md:justify-between">
              <div className="flex gap-4">
                {CONTACT_LINKS.map((link) =>
                  link.title === "Phone" ? (
                    <a
                      key={link.title}
                      href={`tel:${link.route}`}
                      className="bg-accent p-1 rounded-full flex items-center justify-center"
                      style={{
                        height: 36,
                        width: 36,
                      }}
                    >
                      <MdPhone size={18} className="text-white" />
                    </a>
                  ) : (
                    <SocialIcon
                      key={link.title}
                      style={{
                        height: 36,
                        width: 36,
                      }}
                      className="text-gray-800"
                      url={link.route}
                      bgColor={link.title === "Email" ? "#1F4061" : undefined}
                    />
                  )
                )}
              </div>

              <div className="flex flex-col md:flex-row gap-1 md:gap-2 items-center justify-center z-10">
                <p className="text-sm md:text-base text-gray-800">
                  5716 Powderhouse Rd, Cheyenne, WY 82009
                </p>
                <p className="hidden md:block text-sm text-gray-400">|</p>
                <a
                  href={
                    CONTACT_LINKS.find((link) => link.title === "Phone")?.route
                  }
                  className="text-sm md:text-base text-primary"
                >
                  {CONTACT_LINKS.find(
                    (link) => link.title === "Phone"
                  )?.route.replace("tel:", "")}
                </a>
              </div>
            </div>
          </footer>
        </div>
      </body>
    </html>
  );
}
